 plugins {
    id 'application'
     // ASSUMES GRADLE 5.6 OR HIGHER. Use plugin version 0.8.10 with earlier gradle versions
     id 'com.google.protobuf' version '0.8.18'
     // Generate IntelliJ IDEA's .idea & .iml project files
     id 'idea'
}

application {
    mainClass = 'ssd.assignment.DecentAuctionLedger'
    applicationDefaultJvmArgs = ["--add-opens java.base/java.time=ALL-UNNAMED"]
}

group 'ssd.assignment'
version '1.0-SNAPSHOT'

 repositories {
     maven { // The google mirror is less flaky than mavenCentral()
         url "https://maven-central.storage-download.googleapis.com/maven2/" }
     mavenCentral()
     mavenLocal()
 }

 sourceCompatibility = 1.8
 targetCompatibility = 1.8

 def grpcVersion = '1.46.0'
 def protobufVersion = '3.20.1'
 def protocVersion = protobufVersion

 jar {
     manifest {
         attributes 'Main-Class': 'ssd.assignment.DecentAuctionLedger'
     }
 }

dependencies {
    implementation "io.grpc:grpc-protobuf:${grpcVersion}"
    implementation "io.grpc:grpc-stub:${grpcVersion}"
    compileOnly "org.apache.tomcat:annotations-api:6.0.53"

    // examples/advanced need this for JsonFormat
    implementation "com.google.protobuf:protobuf-java-util:${protobufVersion}"

    implementation 'com.google.code.gson:gson:2.9.0'
    compileOnly 'org.projectlombok:lombok:1.18.24'
    annotationProcessor 'org.projectlombok:lombok:1.18.24'

    runtimeOnly "io.grpc:grpc-netty-shaded:${grpcVersion}"

    testCompileOnly 'org.projectlombok:lombok:1.18.24'
    testAnnotationProcessor 'org.projectlombok:lombok:1.18.24'
    testImplementation 'org.junit.jupiter:junit-jupiter-api:5.8.2'
    testImplementation "io.grpc:grpc-testing:${grpcVersion}"
    testImplementation 'junit:junit:4.13.2'
    testImplementation 'org.mockito:mockito-core:4.5.1'
    testRuntimeOnly 'org.junit.jupiter:junit-jupiter-engine'
}

protobuf {
    protoc { artifact = "com.google.protobuf:protoc:${protocVersion}" }
    plugins {
        grpc { artifact = "io.grpc:protoc-gen-grpc-java:${grpcVersion}" }
    }
    generateProtoTasks {
        all()*.plugins { grpc {} }
    }
}

// Inform IDEs like IntelliJ IDEA, Eclipse or NetBeans about the generated code.
sourceSets {
    main {
        java {
            srcDirs 'build/generated/source/proto/main/grpc'
            srcDirs 'build/generated/source/proto/main/java'
        }
    }
}

test {
    useJUnitPlatform()
}
