syntax = "proto3";

option java_multiple_files = true;
option java_package = "ssd.assignment.communication.grpc";
option java_outer_classname = "DecentAuctionProto";
option objc_class_prefix = "DA";

package decentauction;

service NetworkServer {
  rpc ping(Ping) returns (Pong) {}

  rpc store(exampleRequest) returns (exampleReply){} // instructs a node to store a key-value pair

  rpc findNode(exampleRequest) returns (exampleReply){} // returns information about the k nodes closest to the target id

  rpc findValue(exampleRequest) returns (exampleReply){} // similar to the FIND_NODE RPC, but if the recipient has received a STORE for the given key, it just returns the stored value
}

message Ping {
  string nodeipAddress = 1;
  int32 nodePort = 2;
  bytes nodeId = 3;
}

message Pong {
  string nodeipAddress = 1;
  int32 nodePort = 2;
  bytes nodeId = 3;
}

// Type of messages used in Kademlia protocol
message exampleRequest{
  string exampleString = 1;
}

message exampleReply{
  string exampleString = 1;
}
